// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  NAIVE
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  role      Role     @default(NAIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  @@map("users")
}

model Password {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  hash   String
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId], map: "users")
  @@map("passwords")
}

model Customer {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  phone String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  connections Connection[]

  @@map("customers")
}

model Plan {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  speed       Int
  isSpecial   Boolean
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  connections Connection[]

  @@map("plans")
}

model Connection {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  customerId String   @db.ObjectId
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // when a plan is deleted don't delete the connection, instead
  // set it's plan field to null, allow admin to change plan
  planId String? @db.ObjectId
  plan   Plan?   @relation(fields: [planId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("connections")
}
